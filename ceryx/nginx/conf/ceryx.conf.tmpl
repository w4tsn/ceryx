map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

map $http_x_forwarded_proto $proxy_set_x_forwarded_proto {
    default $scheme;
    'http'  http;
    'https' https;
}

server {
    listen 80;
    listen 443 ssl;
    default_type text/html;

    ssl_certificate {{ default .Env.CERYX_SSL_DEFAULT_CERTIFICATE "/etc/ceryx/ssl/default.crt" }};
    ssl_certificate_key {{ default .Env.CERYX_SSL_DEFAULT_KEY "/etc/ceryx/ssl/default.key" }};
    ssl_certificate_by_lua_file lualib/certificate.lua;

    location /.well-known/acme-challenge {
        content_by_lua_block {
            auto_ssl:challenge_server()
        }
    }

    location / {
        set $target "fallback";
        set $host_from_target {{ default .Env.CERYX_HOST_FROM_TARGET "false" }};

        # Lua files
        access_by_lua_file lualib/router.lua;

        # Proxy configuration
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP  $remote_addr;
        proxy_set_header X-Forwarded-Proto $proxy_set_x_forwarded_proto;

        # Upgrade headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_redirect ~^(http://[^:]+):\d+(/.+)$ $2;
        proxy_redirect ~^(https://[^:]+):\d+(/.+)$ $2;
        proxy_redirect / /;

        proxy_pass $target;
    }

    error_page 503 /503.html;
    location = /503.html {
        root /etc/ceryx/static;
    }

    error_page 500 /500.html;
    location = /500.html {
        root /etc/ceryx/static;
    }
}

{{ if ne (lower (default .Env.CERYX_DISABLE_LETS_ENCRYPT "")) "true" }}
# Launch the Let's Encrypt certificate internal server running on port 8999, if
# `CERYX_DISABLE_LETS_ENCRYPT` is *not* set to `true`.

server {
    listen 127.0.0.1:8999;
    client_body_buffer_size 1m;
    client_max_body_size 1m;
    location / {
        content_by_lua_block {
            auto_ssl:hook_server()
        }
    }
}
{{ end }}
